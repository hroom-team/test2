/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserData as PrismaUserData } from "@prisma/client";

export class UserDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UserDataCountArgs, "select">): Promise<number> {
    return this.prisma.userData.count(args);
  }

  async userDataItems(
    args: Prisma.UserDataFindManyArgs
  ): Promise<PrismaUserData[]> {
    return this.prisma.userData.findMany(args);
  }
  async userData(
    args: Prisma.UserDataFindUniqueArgs
  ): Promise<PrismaUserData | null> {
    return this.prisma.userData.findUnique(args);
  }
  async createUserData(
    args: Prisma.UserDataCreateArgs
  ): Promise<PrismaUserData> {
    return this.prisma.userData.create(args);
  }
  async updateUserData(
    args: Prisma.UserDataUpdateArgs
  ): Promise<PrismaUserData> {
    return this.prisma.userData.update(args);
  }
  async deleteUserData(
    args: Prisma.UserDataDeleteArgs
  ): Promise<PrismaUserData> {
    return this.prisma.userData.delete(args);
  }
}
