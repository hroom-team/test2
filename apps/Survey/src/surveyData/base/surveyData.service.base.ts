/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SurveyData as PrismaSurveyData } from "@prisma/client";

export class SurveyDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SurveyDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.surveyData.count(args);
  }

  async surveyDataItems(
    args: Prisma.SurveyDataFindManyArgs
  ): Promise<PrismaSurveyData[]> {
    return this.prisma.surveyData.findMany(args);
  }
  async surveyData(
    args: Prisma.SurveyDataFindUniqueArgs
  ): Promise<PrismaSurveyData | null> {
    return this.prisma.surveyData.findUnique(args);
  }
  async createSurveyData(
    args: Prisma.SurveyDataCreateArgs
  ): Promise<PrismaSurveyData> {
    return this.prisma.surveyData.create(args);
  }
  async updateSurveyData(
    args: Prisma.SurveyDataUpdateArgs
  ): Promise<PrismaSurveyData> {
    return this.prisma.surveyData.update(args);
  }
  async deleteSurveyData(
    args: Prisma.SurveyDataDeleteArgs
  ): Promise<PrismaSurveyData> {
    return this.prisma.surveyData.delete(args);
  }
}
